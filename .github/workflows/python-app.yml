# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on: push 

jobs:
  unit-testing:
    runs-on: ubuntu-latest 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      # - python -m pip install --upgrade pip
      - run: pip install flake8
      - run: pip install setuptools==59.5.0
      - run : pip install pytest
      - run: pip install --no-deps  -r requirements.txt # install all our dependencies for the project
      - run: pytest tests.py # run pytest test
   
   
#    steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-python@v2
#       - name: Install pipenv, libpq, and pandoc
#        with:
#           python-version: 3.8
#       # Passed SonarCube -- continue with deploy
#       - name: Install pipenv, libpq, and pandoc
#         run: |
#           # sudo apt-get install libpq-dev -y
#           pip install --upgrade pip
#           pip install pipenv

#       - name: Install dependencies
#         run: |
#           pipenv --python 3.8 install setuptools==56.0.0
#           pipenv --python 3.8 run pip install --no-deps -r requirements.txt
#       - name: Test with pytest
#       run: |
# #         pytest
#           pytest tests.py # run pytest test
# on:
#   push:
#     branches: [ "master" ]
#   pull_request:
#     # branches: [ "master" ]

# permissions:
#   contents: read

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.8.6
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.8.6"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         # stop the build if there are Python syntax errors or undefined names
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     - name: Test with pytest
#       run: |
#         pytest
